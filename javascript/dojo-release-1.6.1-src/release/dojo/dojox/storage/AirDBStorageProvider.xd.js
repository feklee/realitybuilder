/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


realityBuilderDojo._xdResourceLoaded(function(_1,_2,_3){return {depends:[["provide","dojox.storage.AirDBStorageProvider"],["require","dojox.storage.manager"],["require","dojox.storage.Provider"]],defineResource:function(_4,_5,_6){if(!_4._hasResource["dojox.storage.AirDBStorageProvider"]){_4._hasResource["dojox.storage.AirDBStorageProvider"]=true;_4.provide("dojox.storage.AirDBStorageProvider");_4.require("dojox.storage.manager");_4.require("dojox.storage.Provider");if(_4.isAIR){(function(){if(!_7){var _7={};}_7.File=window.runtime.flash.filesystem.File;_7.SQLConnection=window.runtime.flash.data.SQLConnection;_7.SQLStatement=window.runtime.flash.data.SQLStatement;_4.declare("dojox.storage.AirDBStorageProvider",[_6.storage.Provider],{DATABASE_FILE:"dojo.db",TABLE_NAME:"__DOJO_STORAGE",initialized:false,_db:null,initialize:function(){this.initialized=false;try{this._db=new _7.SQLConnection();this._db.open(_7.File.applicationStorageDirectory.resolvePath(this.DATABASE_FILE));this._sql("CREATE TABLE IF NOT EXISTS "+this.TABLE_NAME+"(namespace TEXT, key TEXT, value TEXT)");this._sql("CREATE UNIQUE INDEX IF NOT EXISTS namespace_key_index ON "+this.TABLE_NAME+" (namespace, key)");this.initialized=true;}catch(e){console.debug("dojox.storage.AirDBStorageProvider.initialize:",e);}_6.storage.manager.loaded();},_sql:function(_8,_9){var _a=new _7.SQLStatement();_a.sqlConnection=this._db;_a.text=_8;if(_9){for(var _b in _9){_a.parameters[_b]=_9[_b];}}_a.execute();return _a.getResult();},_beginTransaction:function(){this._db.begin();},_commitTransaction:function(){this._db.commit();},isAvailable:function(){return true;},put:function(_c,_d,_e,_f){if(this.isValidKey(_c)==false){throw new Error("Invalid key given: "+_c);}_f=_f||this.DEFAULT_NAMESPACE;if(this.isValidKey(_f)==false){throw new Error("Invalid namespace given: "+_f);}try{this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_f,":key":_c});this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":_f,":key":_c,":value":_d});}catch(e){console.debug("dojox.storage.AirDBStorageProvider.put:",e);_e(this.FAILED,_c,e.toString());return;}if(_e){_e(this.SUCCESS,_c,null,_f);}},get:function(key,_10){if(this.isValidKey(key)==false){throw new Error("Invalid key given: "+key);}_10=_10||this.DEFAULT_NAMESPACE;var _11=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_10,":key":key});if(_11.data&&_11.data.length){return _11.data[0].value;}return null;},getNamespaces:function(){var _12=[this.DEFAULT_NAMESPACE];var rs=this._sql("SELECT namespace FROM "+this.TABLE_NAME+" DESC GROUP BY namespace");if(rs.data){for(var i=0;i<rs.data.length;i++){if(rs.data[i].namespace!=this.DEFAULT_NAMESPACE){_12.push(rs.data[i].namespace);}}}return _12;},getKeys:function(_13){_13=_13||this.DEFAULT_NAMESPACE;if(this.isValidKey(_13)==false){throw new Error("Invalid namespace given: "+_13);}var _14=[];var rs=this._sql("SELECT key FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":_13});if(rs.data){for(var i=0;i<rs.data.length;i++){_14.push(rs.data[i].key);}}return _14;},clear:function(_15){if(this.isValidKey(_15)==false){throw new Error("Invalid namespace given: "+_15);}this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":_15});},remove:function(key,_16){_16=_16||this.DEFAULT_NAMESPACE;this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_16,":key":key});},putMultiple:function(_17,_18,_19,_1a){if(this.isValidKeyArray(_17)===false||!_18 instanceof Array||_17.length!=_18.length){throw new Error("Invalid arguments: keys = ["+_17+"], values = ["+_18+"]");}if(_1a==null||typeof _1a=="undefined"){_1a=this.DEFAULT_NAMESPACE;}if(this.isValidKey(_1a)==false){throw new Error("Invalid namespace given: "+_1a);}this._statusHandler=_19;try{this._beginTransaction();for(var i=0;i<_17.length;i++){this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_1a,":key":_17[i]});this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":_1a,":key":_17[i],":value":_18[i]});}this._commitTransaction();}catch(e){console.debug("dojox.storage.AirDBStorageProvider.putMultiple:",e);if(_19){_19(this.FAILED,_17,e.toString(),_1a);}return;}if(_19){_19(this.SUCCESS,_17,null);}},getMultiple:function(_1b,_1c){if(this.isValidKeyArray(_1b)===false){throw new Error("Invalid key array given: "+_1b);}if(_1c==null||typeof _1c=="undefined"){_1c=this.DEFAULT_NAMESPACE;}if(this.isValidKey(_1c)==false){throw new Error("Invalid namespace given: "+_1c);}var _1d=[];for(var i=0;i<_1b.length;i++){var _1e=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_1c,":key":_1b[i]});_1d[i]=_1e.data&&_1e.data.length?_1e.data[0].value:null;}return _1d;},removeMultiple:function(_1f,_20){_20=_20||this.DEFAULT_NAMESPACE;this._beginTransaction();for(var i=0;i<_1f.length;i++){this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = namespace = :namespace AND key = :key",{":namespace":_20,":key":_1f[i]});}this._commitTransaction();},isPermanent:function(){return true;},getMaximumSize:function(){return this.SIZE_NO_LIMIT;},hasSettingsUI:function(){return false;},showSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface");},hideSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface");}});_6.storage.manager.register("dojox.storage.AirDBStorageProvider",new _6.storage.AirDBStorageProvider());_6.storage.manager.initialize();})();}}}};});